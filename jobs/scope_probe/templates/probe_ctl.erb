#!/bin/bash

<%
  target = nil

  # service_token takes precedence over target_addr and link properties
  if_p('weave.scope.probe.service_token') do |token|
    target = '--service-token=' + token
  end

  # target_addr takes precendence over link
  if_p('weave.scope.probe.target_addr') do |address|
    target = address unless target
  end

  # use link if neither service_token nor target_addr have been specified
  if_link('weave_scope_app') do |link|
    target = link.instances.map { |i| i.address + ':' + link.p('weave.scope.app.http.port').to_s }.join(" ") unless target
  end

  # fallback to localhost if target has not been set explicitly or through a link
  target = "127.0.0.1:4040" unless target
%>

RUN_DIR=/var/vcap/sys/run/scope
LOG_DIR=/var/vcap/sys/log/scope
PIDFILE=${RUN_DIR}/probe
JQ=/var/vcap/packages/scope-jq/jq
SCOPE=/var/vcap/packages/scope/scope
SCOPE_PLUGINS_ROOT=<%= p('weave.scope.probe.plugins.root') %>
TARGET="<%= target %>"

case $1 in

  start)
    mkdir -p $RUN_DIR $LOG_DIR $SCOPE_PLUGINS_ROOT
    chown -R vcap:vcap $RUN_DIR $LOG_DIR $SCOPE_PLUGINS_ROOT

    echo $$ > $PIDFILE

    chmod +x $JQ
    export SCOPE_HOSTNAME=`cat /var/vcap/bosh/spec.json | $JQ -r '.job.name + "/" + (.index | tostring)'`

    chmod +x $SCOPE
    exec $SCOPE --mode=probe \
    --probe.plugins.root=${SCOPE_PLUGINS_ROOT} \
    --probe.docker=false \
    --probe.kubernetes=false \
    --weave=false \
    --no-app \
    --probe.conntrack=false \
    ${TARGET} \
      >>  $LOG_DIR/probe.stdout.log \
      2>> $LOG_DIR/probe.stderr.log

    ;;

  stop)
    kill -9 `cat $PIDFILE`
    rm -f $PIDFILE

    ;;

  *)
    echo "Usage: ctl {start|stop}" ;;

esac
